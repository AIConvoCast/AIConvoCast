name: Run AI Podcast Pipeline

on:
  workflow_dispatch:
    inputs:
      custom_topic:
        description: 'Custom topic for the podcast (optional)'
        required: false
        type: string
      workflow_id:
        description: 'Specific workflow ID to run (optional) - leave blank to use Active Y flag from Workflows tab'
        required: false
        type: string
        default: ''
      force_run:
        description: 'Force run even if no changes detected'
        required: false
        type: boolean
        default: false

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    name: Run AI Podcast Pipeline
    timeout-minutes: 30
    environment: production  # Use your GitHub environment
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Google credentials file
        run: |
          echo '${{ secrets.GOOGLE_CREDS_JSON }}' > jmio-google-api.json

      - name: Set up environment variables
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}" >> $GITHUB_ENV
          echo "SHARE_SHEET_WITH_EMAIL=${{ secrets.SHARE_SHEET_WITH_EMAIL }}" >> $GITHUB_ENV
          echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" >> $GITHUB_ENV
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> $GITHUB_ENV
          echo "CUSTOM_TOPIC=${{ github.event.inputs.custom_topic || '' }}" >> $GITHUB_ENV
          echo "WORKFLOW_ID=${{ github.event.inputs.workflow_id || '' }}" >> $GITHUB_ENV

      - name: Create .env file
        run: |
          cat > .env << EOF
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}
          SHARE_SHEET_WITH_EMAIL=${{ secrets.SHARE_SHEET_WITH_EMAIL }}
          ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          EOF

      - name: Test Environment Variables
        run: |
          python test_env_vars.py

      - name: Run AI Podcast Pipeline
        id: run-pipeline
        run: |
          echo "Starting AI Podcast Pipeline..."
          echo "Custom Topic: ${{ github.event.inputs.custom_topic || 'None' }}"
          echo "Workflow ID: ${{ github.event.inputs.workflow_id || 'Active Y from Workflows tab' }}"
          echo "Trigger: ${{ github.event.name }}"
          
          # Debug: Check if environment variables are set
          echo "Checking environment variables..."
          if [ -n "$OPENAI_API_KEY" ]; then
            echo "✅ OPENAI_API_KEY is set (length: ${#OPENAI_API_KEY})"
          else
            echo "❌ OPENAI_API_KEY is not set"
          fi
          
          if [ -n "$ELEVENLABS_API_KEY" ]; then
            echo "✅ ELEVENLABS_API_KEY is set (length: ${#ELEVENLABS_API_KEY})"
          else
            echo "❌ ELEVENLABS_API_KEY is not set"
          fi
          
          if [ -n "$SHARE_SHEET_WITH_EMAIL" ]; then
            echo "✅ SHARE_SHEET_WITH_EMAIL is set: $SHARE_SHEET_WITH_EMAIL"
          else
            echo "❌ SHARE_SHEET_WITH_EMAIL is not set"
          fi
          
          if [ -n "$ANTHROPIC_API_KEY" ]; then
            echo "✅ ANTHROPIC_API_KEY is set (length: ${#ANTHROPIC_API_KEY})"
          else
            echo "❌ ANTHROPIC_API_KEY is not set"
          fi
          
          if [ -n "$GEMINI_API_KEY" ]; then
            echo "✅ GEMINI_API_KEY is set (length: ${#GEMINI_API_KEY})"
          else
            echo "❌ GEMINI_API_KEY is not set"
          fi
          
          python ai_podcast_pipeline_for_cursor.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
          SHARE_SHEET_WITH_EMAIL: ${{ secrets.SHARE_SHEET_WITH_EMAIL }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Upload generated audio files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-audio-files-${{ github.run_id }}
          path: |
            generated_mp3/
            *.mp3
          retention-days: 7

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-logs-${{ github.run_id }}
          path: |
            *.log
            logs/
          retention-days: 30

      - name: Cleanup generated files
        if: always()
        run: |
          rm -rf generated_mp3/
          rm -f *.mp3
          rm -f jmio-google-api.json
          rm -f .env

      - name: Notify on success
        if: success()
        run: |
          echo "✅ AI Podcast Pipeline completed successfully!"
          echo "Run ID: ${{ github.run_id }}"
          echo "Trigger: ${{ github.event_name }}"
          echo "Check the generated-audio-files-${{ github.run_id }} artifact for output."

      - name: Notify on failure
        if: failure()
        run: |
          echo "❌ AI Podcast Pipeline failed!"
          echo "Run ID: ${{ github.run_id }}"
          echo "Trigger: ${{ github.event_name }}"
          echo "Check the pipeline-logs-${{ github.run_id }} artifact for details." 